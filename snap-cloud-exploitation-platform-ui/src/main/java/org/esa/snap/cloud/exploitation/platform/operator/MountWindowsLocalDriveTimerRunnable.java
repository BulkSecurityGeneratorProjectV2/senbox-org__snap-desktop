package org.esa.snap.cloud.exploitation.platform.operator;

import org.esa.snap.cloud.exploitation.platform.CloudExploitationPlatformOp;
import org.esa.snap.cloud.exploitation.platform.loading.AbstractTimerRunnable;
import org.esa.snap.cloud.exploitation.platform.loading.ILoadingIndicator;
import org.esa.snap.cloud.exploitation.platform.loading.IMessageDialog;
import org.esa.snap.cloud.exploitation.platform.topology.IMountLocalSharedFolderCallback;

public class MountWindowsLocalDriveTimerRunnable extends AbstractTimerRunnable<WindowsLocalMachineMountDrive> {

    private final IMessageDialog parentWindow;
    private final String remoteSharedFolderURL;
    private final String remoteUsername;
    private final String remotePassword;
    private final String localSharedDrive;
    private final IMountLocalSharedFolderCallback callback;

    public MountWindowsLocalDriveTimerRunnable(IMessageDialog parentWindow, ILoadingIndicator loadingIndicator, int threadId,
                                               String remoteSharedFolderURL, String remoteUsername, String remotePassword,
                                               String localSharedDrive, IMountLocalSharedFolderCallback callback) {

        super(loadingIndicator, threadId, 500);

        this.parentWindow = parentWindow;
        this.remoteSharedFolderURL = remoteSharedFolderURL;
        this.remoteUsername = remoteUsername;
        this.remotePassword = remotePassword;
        this.localSharedDrive = localSharedDrive;
        this.callback = callback;
    }

    @Override
    protected final void onTimerWakeUp(String messageToDisplay) {
        super.onTimerWakeUp("Mounting local shared drive...");
    }

    @Override
    protected String getExceptionLoggingMessage() {
        return "Failed to mount the local shared drive '"+this.localSharedDrive+"'.";
    }

    @Override
    protected final void onFailed(Exception exception) {
        this.parentWindow.showErrorDialog("Failed to mount the local shared drive '"+this.localSharedDrive+"'.", "Failed");
    }

    @Override
    protected void onSuccessfullyFinish(WindowsLocalMachineMountDrive result) {
        this.callback.onSuccessfullyFinishMountingLocalFolder(result);
    }

    @Override
    protected WindowsLocalMachineMountDrive execute() throws Exception {
        boolean mountedSharedDrive = CloudExploitationPlatformOp.mountWindowsLocalDrive(this.remoteSharedFolderURL, this.remoteUsername, this.remotePassword, this.localSharedDrive);
        return new WindowsLocalMachineMountDrive(this.localSharedDrive, mountedSharedDrive);
    }
}
