package org.esa.snap.cloud.exploitation.platform.operator;

import org.esa.snap.cloud.exploitation.platform.CloudExploitationPlatformOp;
import org.esa.snap.cloud.exploitation.platform.LocalMachineLinuxMountFolder;
import org.esa.snap.cloud.exploitation.platform.loading.AbstractTimerRunnable;
import org.esa.snap.cloud.exploitation.platform.loading.ILoadingIndicator;
import org.esa.snap.cloud.exploitation.platform.loading.IMessageDialog;

public class MountLinuxLocalFolderTimerRunnable extends AbstractTimerRunnable<LocalMachineLinuxMountFolder> {

    private final IMessageDialog parentWindow;
    private final String remoteSharedFolderURL;
    private final String remoteUsername;
    private final String remotePassword;
    private final String localSharedFolderPath;
    private final String localPassword;

    public MountLinuxLocalFolderTimerRunnable(IMessageDialog parentWindow, ILoadingIndicator loadingIndicator, int threadId,
                                              String remoteSharedFolderURL, String remoteUsername, String remotePassword,
                                              String localSharedFolderPath, String localPassword) {

        super(loadingIndicator, threadId, 500);

        this.parentWindow = parentWindow;
        this.remoteSharedFolderURL = remoteSharedFolderURL;
        this.remoteUsername = remoteUsername;
        this.remotePassword = remotePassword;
        this.localSharedFolderPath = localSharedFolderPath;
        this.localPassword = localPassword;
    }

    @Override
    protected final void onTimerWakeUp(String messageToDisplay) {
        super.onTimerWakeUp("Mounting local shared folder...");
    }

    @Override
    protected String getExceptionLoggingMessage() {
        return "Failed to mount the local shared folder '"+this.localSharedFolderPath+"'.";
    }

    @Override
    protected final void onFailed(Exception exception) {
        this.parentWindow.showErrorDialog("Failed to mount the local shared folder '"+this.localSharedFolderPath+"'.", "Failed");
    }

    @Override
    protected LocalMachineLinuxMountFolder execute() throws Exception {
        return CloudExploitationPlatformOp.mountLinuxLocalFolder(this.remoteSharedFolderURL, this.remoteUsername, this.remotePassword,
                                                                 this.localSharedFolderPath, this.localPassword);
    }
}
