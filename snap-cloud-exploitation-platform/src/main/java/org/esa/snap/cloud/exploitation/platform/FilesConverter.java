package org.esa.snap.cloud.exploitation.platform;

import com.bc.ceres.binding.ConversionException;
import com.bc.ceres.binding.Converter;
import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;
import org.json.simple.parser.ParseException;

import java.io.File;

/**
 * Created by jcoravu on 4/1/2019.
 */
public class FilesConverter implements Converter<File[]> {

    public FilesConverter() {
    }

    @Override
    public Class<? extends File[]> getValueType() {
        return File[].class;
    }

    @Override
    public File[] parse(String text) throws ConversionException {
        try {
            JSONParser jsonParser = new JSONParser();
            JSONArray jsonArray = (JSONArray)jsonParser.parse(text);
            File[] result = new File[jsonArray.size()];
            for (int i=0; i<jsonArray.size(); i++) {
                JSONObject jsonObject = (JSONObject)jsonArray.get(i);
                String filePath = (String)jsonObject.get("file-path");
                result[i] = new File(filePath);
            }
            return result;
        } catch (ParseException e) {
            throw new ConversionException(e);
        }
    }

    @Override
    public String format(File[] value) {
        JSONArray jsonArray = new JSONArray();
        for  (int i=0; i<value.length; i++) {
            JSONObject item = new JSONObject();
            item.put("file-path", value[i].getAbsolutePath());
            jsonArray.add(item);
        }
        return jsonArray.toString();
    }
}
