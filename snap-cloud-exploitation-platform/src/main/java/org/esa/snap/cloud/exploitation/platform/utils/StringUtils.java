package org.esa.snap.cloud.exploitation.platform.utils;

/**
 * Created by jcoravu on 10/1/2019.
 */
public class StringUtils {

    private StringUtils() {
    }

    public static boolean isNullOrEmpty(String value) {
        if (value != null) {
            for (int i = 0; i < value.length(); i++) {
                if (value.charAt(i) != ' ') {
                    return false;
                }
            }
        }
        return true;
    }

    public static boolean startsWithIgnoreCase(String value, String valueToCheck) {
        if (value.length() >= valueToCheck.length()) {
            return value.regionMatches(true, 0, valueToCheck, 0, valueToCheck.length());
        }
        return false;
    }

    public static boolean endsWithIgnoreCase(String value, String valueToCheck) {
        if (value.length() >= valueToCheck.length()) {
            int offset = value.length() - valueToCheck.length();
            return value.regionMatches(true, offset, valueToCheck, 0, valueToCheck.length());
        }
        return false;
    }

    public static boolean containsIgnoreCase(String value, String valueToCheck) {
        return indexOfIgnoreCase(value, valueToCheck, 0) >= 0;
    }

    public static int indexOfIgnoreCase(String value, String valueToCheck) {
        return indexOfIgnoreCase(value, valueToCheck, 0);
    }

    public static int indexOfIgnoreCase(String value, String valueToCheck, int fromIndex) {
        if (fromIndex < 0) {
            throw new IllegalArgumentException("The index cannot be < 0.");
        }
        if ((fromIndex + valueToCheck.length()) <= value.length()) {
            int difference = (value.length() - valueToCheck.length()) + fromIndex;
            for (int i=fromIndex; i<=difference; i++) {
                if (value.regionMatches(true, i, valueToCheck, 0, valueToCheck.length())) {
                    return i;
                }
            }
        }
        return -1;
    }
}
